{"version":3,"sources":["components/TodoTemplate.tsx","components/TodoHead.tsx","components/TodoItem.tsx","components/TodoList.tsx","components/TodoCreate.tsx","components/TodoContainer.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["TodoTemplateBlock","styled","div","TodoTemplate","children","TodoHeadBlock","TodoHead","week","Array","date","Date","toLocaleDateString","className","getDay","TodoCheckBox","TodoPinBox","TodoTextBox","props","done","css","TodoRemoveBox","TodoItemBlock","TodoItem","data","removeTodo","toggleTodoDone","pinTodo","id","text","pinned","onClick","console","log","TodoListBlock","TodoList","todos","map","todo","TodoCreateBlock","TodoCreate","addNewTodo","useState","value","setValue","onSubmit","e","preventDefault","placeholder","onChange","target","TodoContainer","setTodos","todoText","length","prevState","filter","GlobalStyle","createGlobalStyle","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1f363980.chunk.js","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\n// import { TodoItemProps } from './TodoItem';\r\n\r\ntype TodoTemplateProps = {\r\n    children: React.ReactNode;\r\n}\r\n\r\nconst TodoTemplateBlock = styled.div`\r\n    width: 512px;\r\n    height: 768px;\r\n\r\n    position: relative;\r\n    background: white;\r\n    border-radius: 16px;\r\n    box-shadow: 0 0 8px 0 rgba(0, 0, 0, 0.04);\r\n\r\n    margin: 0 auto;\r\n\r\n    margin-top: 96px;\r\n    margin-bottom: 32px;\r\n    display: flex;\r\n    flex-direction: column;\r\n`;\r\n\r\nfunction TodoTemplate({children}: TodoTemplateProps): JSX.Element {\r\n    return <TodoTemplateBlock>{children}</TodoTemplateBlock>;\r\n}\r\n\r\nexport default TodoTemplate;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst TodoHeadBlock = styled.div`\r\n    padding-top: 48px;\r\n    padding-left: 32px;\r\n    padding-right: 32px;\r\n    padding-bottom: 10px;\r\n    border-bottom: 1px solid #e9ecef;\r\n    h1 {\r\n        margin: 0;\r\n        font-size: 30px;\r\n        color: #1e099b;\r\n    }\r\n    .day {\r\n        font-size: 20px;\r\n        margin-top: 15px;\r\n    }\r\n`;\r\n\r\nfunction TodoHead() {\r\n    var week = new Array('일요일', '월요일', '화요일', '수요일', '목요일', '금요일', '토요일');\r\n    const date = new Date();\r\n    return (\r\n        <TodoHeadBlock>\r\n            <h1>{date.toLocaleDateString()}</h1>\r\n            <div className=\"day\">{week[date.getDay()]}</div>\r\n        </TodoHeadBlock>\r\n    );\r\n}\r\n\r\nexport default TodoHead;","import React from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport TodoItemModel from '../models/TodoItemModel'\r\nimport { MdDeleteForever, MdCheckBox, MdCheckBoxOutlineBlank } from 'react-icons/md';\r\nimport { AiTwotonePushpin, AiOutlinePushpin} from 'react-icons/ai';\r\n\r\nconst TodoCheckBox = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    margin-left: 7px;\r\n\r\n    svg {\r\n        width: 32px;\r\n        height: 32px;\r\n    }\r\n\r\n    &:hover {\r\n        transform: scale(1.2);\r\n        -webkit-transform: scale(1.2);\r\n        -moz-transform: scale(1.2);\r\n        -ms-transform: scale(1.2);\r\n        -o-transform: scale(1.2);\r\n    }\r\n`;\r\n\r\nconst TodoPinBox = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    margin-right: 10px;\r\n    margin-left: 10px;\r\n\r\n    svg {\r\n        width: 32px;\r\n        height: 32px;\r\n    }\r\n\r\n    &:hover {\r\n        transform: scale(1.2);\r\n        -webkit-transform: scale(1.2);\r\n        -moz-transform: scale(1.2);\r\n        -ms-transform: scale(1.2);\r\n        -o-transform: scale(1.2);\r\n    }\r\n`;\r\n\r\nconst TodoTextBox = styled.div<{ done: boolean }>`\r\n    flex: 1;\r\n    font-size: 20px;\r\n    ${props =>\r\n        props.done &&\r\n        css`\r\n            text-decoration: line-through;\r\n        `}\r\n`;\r\n\r\nconst TodoRemoveBox = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    margin-right: 10px;\r\n\r\n    svg {\r\n        width: 32px;\r\n        height: 32px;\r\n    }\r\n\r\n    &:hover {\r\n        transform: scale(1.2);\r\n        -webkit-transform: scale(1.2);\r\n        -moz-transform: scale(1.2);\r\n        -ms-transform: scale(1.2);\r\n        -o-transform: scale(1.2);\r\n    }\r\n`;\r\n\r\nconst TodoItemBlock = styled.div<{done: boolean}>`\r\n    display: flex;\r\n    align-items: center;\r\n    padding-top: 10px;\r\n    padding-bottom: 10px;\r\n    border: 1px solid #e9ecef;\r\n    border-radius: 10px;\r\n    margin-bottom: 5px;\r\n\r\n    &:hover {\r\n        transform: scale(1.03);\r\n        -webkit-transform: scale(1.03);\r\n        -moz-transform: scale(1.03);\r\n        -ms-transform: scale(1.03);\r\n        -o-transform: scale(1.03);\r\n    }\r\n\r\n    ${props =>\r\n        props.done &&\r\n        css`\r\n            text-decoration: line-through;\r\n            background: #EEE;\r\n        `}\r\n`;\r\n\r\ninterface TodoItemProps {\r\n    data: TodoItemModel\r\n    removeTodo: (id: number) => void;\r\n    toggleTodoDone: (id: number) => void;\r\n    pinTodo: (id: number) => void;\r\n};\r\n\r\nfunction TodoItem(props: TodoItemProps): JSX.Element {\r\n    const {data, removeTodo, toggleTodoDone, pinTodo} = props;\r\n    const {id, done, text, pinned} = data;\r\n\r\n    const toggleDone = () => {\r\n        toggleTodoDone(id);\r\n    }\r\n\r\n    const pinning = () => {\r\n        console.log(pinned);\r\n        pinTodo(id);\r\n    }\r\n\r\n    const removing = () => {\r\n        removeTodo(id);\r\n    }\r\n\r\n    return (\r\n        <TodoItemBlock done={done}>\r\n            <TodoCheckBox onClick={toggleDone}>\r\n                {done ? <MdCheckBox /> : <MdCheckBoxOutlineBlank />}\r\n            </TodoCheckBox>\r\n            <TodoPinBox onClick={pinning}> \r\n                {pinned ? <AiTwotonePushpin/> : <AiOutlinePushpin/>}\r\n            </TodoPinBox>\r\n            <TodoTextBox done={done}>\r\n                {text}\r\n            </TodoTextBox>\r\n            <TodoRemoveBox onClick={removing}>\r\n                <MdDeleteForever />\r\n            </TodoRemoveBox>\r\n        </TodoItemBlock>\r\n    )\r\n}\r\n\r\nexport default TodoItem;\r\n","import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport TodoItem from './TodoItem';\r\nimport TodoItemModel from '../models/TodoItemModel';\r\n\r\nconst TodoListBlock = styled.div`\r\n    flex: 1;\r\n    padding: 20px 25px;\r\n    padding-bottom: 48px;\r\n    overflow-y: auto;\r\n    /* background: gray; */\r\n`;\r\n\r\ninterface TodoListProps {\r\n    todos: TodoItemModel[];\r\n    removeTodo: (id: number) => void;\r\n    toggleTodoDone: (id: number) => void;\r\n    pinTodo: (id: number) => void;\r\n}\r\n\r\nfunction TodoList(props: TodoListProps) {\r\n    const {todos, removeTodo, toggleTodoDone, pinTodo} = props;\r\n\r\n    return(\r\n        <TodoListBlock>\r\n            {todos.map(todo =>\r\n                todo.pinned ? (\r\n                    <TodoItem \r\n                        data={todo}\r\n                        removeTodo={removeTodo}\r\n                        toggleTodoDone={toggleTodoDone}\r\n                        pinTodo={pinTodo}\r\n                    />\r\n                ) : null)}\r\n            {todos.map(todo =>\r\n                !todo.pinned ? (\r\n                    <TodoItem \r\n                        data={todo}\r\n                        removeTodo={removeTodo}\r\n                        toggleTodoDone={toggleTodoDone}\r\n                        pinTodo={pinTodo}\r\n                    />\r\n                ) : null)}\r\n        </TodoListBlock>\r\n    );\r\n}\r\n\r\nexport default TodoList;","import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst TodoCreateBlock = styled.div`\r\n    padding-bottom: 0px;\r\n    margin-top: 10px;\r\n    margin-bottom: 0px;\r\n    /* margin: 0; */\r\n    /* height: 80px; */\r\n    form{\r\n        align-content: center;\r\n        height: 30px;\r\n        width: 95%;\r\n    };\r\n    input {\r\n        margin-left: 5%;\r\n        width: 75%;\r\n        height: 20px;\r\n        padding: 10px 0px;\r\n        float: left;\r\n        font: bold 15px 'lucida sans';\r\n        border: 0;\r\n        background: #EEE;\r\n    }\r\n    button {\r\n        overflow: visible;\r\n        position: relative;\r\n        float: right;\r\n        border: 0;\r\n        padding: 0;\r\n        cursor: pointer;\r\n        height: 40px;\r\n        width: 20%;\r\n        font: bold 15px/40px 'lucida sans', 'trebuchet MS', 'Tahoma';\r\n        color: white;\r\n        text-transform: uppercase;\r\n        background: #345678;\r\n        border-radius: 0 3px 3px 0;\r\n\r\n        &:hover {\r\n        transform: scale(1.1);\r\n        -webkit-transform: scale(1.1);\r\n        -moz-transform: scale(1.1);\r\n        -ms-transform: scale(1.1);\r\n        -o-transform: scale(1.1);\r\n    }\r\n    }\r\n`;\r\n\r\ninterface TodoCreateProps{\r\n    addNewTodo: (todoText: string) => void;\r\n}\r\n\r\nfunction TodoCreate(props: TodoCreateProps) {\r\n    const { addNewTodo } = props;\r\n\r\n    const [value, setValue] = useState('');\r\n\r\n    const onSubmit = (e: React.FormEvent) => {\r\n        e.preventDefault();\r\n        addNewTodo(value);\r\n        setValue('');\r\n    };\r\n\r\n    const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        setValue(e.target.value);\r\n    }\r\n\r\n    return (\r\n        <TodoCreateBlock>\r\n            <form onSubmit={onSubmit}>\r\n                <input\r\n                    placeholder=\"할 일 입력하시오\"\r\n                    onChange={onChange}\r\n                    value={value}\r\n                />\r\n                <button>CREATE</button>\r\n            </form>\r\n        </TodoCreateBlock>\r\n    )\r\n}\r\n\r\nexport default TodoCreate;","import React, { useState } from 'react';\r\nimport TodoHead from './TodoHead';\r\nimport TodoList from './TodoList';\r\nimport TodoCreate from './TodoCreate';\r\nimport TodoItemModel from '../models/TodoItemModel';\r\n\r\nfunction TodoContainer() : JSX.Element {\r\n    const [todos, setTodos] = useState<TodoItemModel[]>([]);\r\n    // const [todo, setTodo] = useState<TodoItemModel>();\r\n\r\n    const addNewTodo = (todoText: string) => {\r\n        if (!todos) return;\r\n        if (!todoText) return;\r\n        const todo = {\r\n            id: todos.length,\r\n            done: false,\r\n            pinned: false,\r\n            text: todoText\r\n        };\r\n        setTodos((prevState) => [todo, ...prevState]);\r\n    };\r\n    const removeTodo = (id: number) => {\r\n        if (!todos) return;\r\n        setTodos(todos.filter((todo) => todo.id !== id));\r\n    };\r\n    const pinTodo = (id: number) => {\r\n        if (!todos) return;\r\n        console.log(\"pinned\");\r\n        setTodos(todos.map((todo) => ({\r\n            ...todo,\r\n            pinned: todo.id === id ? !todo.pinned : todo.pinned,\r\n        })));\r\n    };\r\n    const toggleTodoDone = (id: number) => {\r\n        if (!todos) return;\r\n\r\n        setTodos(todos.map((todo) => ({\r\n            ...todo,\r\n            done: todo.id === id ? !todo.done : todo.done,\r\n        })));\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <TodoHead />\r\n            <TodoCreate addNewTodo={addNewTodo}/>\r\n            <TodoList \r\n                todos={todos}\r\n                removeTodo={removeTodo}\r\n                toggleTodoDone={toggleTodoDone}\r\n                pinTodo={pinTodo}\r\n            />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default TodoContainer;","import React from 'react';\nimport styled, { createGlobalStyle } from 'styled-components';\nimport TodoTemplate from './components/TodoTemplate';\nimport TodoHead from './components/TodoHead';\nimport TodoList from './components/TodoList';\nimport TodoContainer from './components/TodoContainer';\n\nconst GlobalStyle = createGlobalStyle`\n    body{\n        padding: 0;\n        margin: 0;\n        background: #e9ecef;\n    }\n`;\n\n\nfunction App() {\n    return (\n        <>\n            <GlobalStyle/>\n            <TodoTemplate>\n                <TodoContainer/>\n            </TodoTemplate>\n        </>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}